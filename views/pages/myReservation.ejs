<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../assets/css/style.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <title>My Space</title>
</head>
<body>
    <div class="container">
        <header class="d-flex flex-wrap justify-content-center py-3 mb-4 border-bottom">
          <a href="/" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto link-body-emphasis text-decoration-none">
            <svg class="bi me-2" width="40" height="32"><use xlink:href="#bootstrap"></use></svg>
            <span class="fs-4"> Reservation Room</span>
          </a>
    
          <ul class="nav nav-pills">
            <li class="nav-item"><a href="/views/myReservation" class="nav-link active" aria-current="page">My space</a></li>
            <li class="nav-item"><a href="/views/reservation" class="nav-link">Reservation</a></li>
            <li class="nav-item"><a href="/views/salles" class="nav-link" >Rooms</a></li>
            <li class="nav-item"><a href="/views/calender" class="nav-link " >Calender</a></li>
            
            <button id="deleteLocalStorageBtn" class="btn btn-success" style="float:right">logout</button>
          </ul>
        </header>
      </div>
     






    <div id="reservations-table" class="table" ></div>

    <script>
        window.onload = async function() {
            if (!localStorage.length) {
        // Local storage is empty, redirect
        window.location.href = 'http://localhost:5000/views/login';
    }
            const reservationsTable = document.getElementById("reservations-table");

            try {
                const id = window.localStorage.getItem('user');
                console.log(id);
                // Fetch reservations from the server
                const response = await fetch(`/api/res/${id}`);
                const reservationsData = await response.json();

                // Construct the HTML for the table
                let tableHTML = '<table>';
                tableHTML += '<thead><tr><th> Verified</th><th>Star Time</th><th>End Time</th><th>Action</th></tr></thead>';
                tableHTML += '<tbody>';

                // Loop through the reservations data and create a row for each reservation
                reservationsData.forEach(reservation => {
                    tableHTML += `<tr>
                        
                        
                        <td>${reservation.isVerified}</td>
                        <td>${reservation.starTime}</td>
                        <td>${reservation.endTime}</td>
                        <td>
                            <button class="delete-btn" data-id="${reservation._id}">Delete</button>
                            <button class="modify-btn" data-id="${reservation.id}">Modify</button>
                        </td>
                    </tr>`;
                });

                tableHTML += '</tbody></table>';

                // Set the generated HTML as the content of the reservations-table container
                reservationsTable.innerHTML = tableHTML;

                // Add event listeners for delete and modify buttons
                const deleteButtons = document.querySelectorAll('.delete-btn');
                deleteButtons.forEach(button => {
                    button.addEventListener('click', async () => {
                        const reservationId = button.getAttribute('data-id');
                        // Call a function to handle delete operation with reservationId
                        handleDelete(reservationId);
                    });
                });

                const modifyButtons = document.querySelectorAll('.modify-btn');
                modifyButtons.forEach(button => {
                    button.addEventListener('click', async () => {
                        const reservationId = button.getAttribute('data-id');

                        // Call a function to handle modify operation with reservationId
                        handleModify(reservationId);
                    });
                });
            } catch (error) {
                console.error("Error fetching reservations:", error);
            }
        }

        // Function to handle delete operation
        async function handleDelete(reservationId) {
            try {
                // Send a request to delete the reservation with reservationId
                const response = await fetch(`/api/res/delete/${reservationId}`, {
                    method: 'DELETE',
                });

                if (response.ok) {
                    console.log('Reservation deleted successfully');
                    // Optionally, update the UI or display a success message
                } else {
                    console.error('Failed to delete reservation');
                }
            } catch (error) {
                console.error('Error deleting reservation:', error);
            }
            alert("veuillez supprimer la sur√©servation par mail")
        }

        // Function to handle modify operation
        async function handleModify(reservationId) {
            // Implement modify functionality as per your requirement
            console.log('Modify reservation with ID:', reservationId);
        }
    </script>
    <script>
        document.getElementById('deleteLocalStorageBtn').addEventListener('click', function() {
            // Clear the local storage
            localStorage.clear();
            window.location.replace("http://localhost:5000/views/login");
        });
        </script>
</body>
</html>